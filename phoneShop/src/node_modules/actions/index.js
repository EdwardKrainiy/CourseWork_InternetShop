import {
  VIEW_PHONES_START,
  VIEW_PHONES_SUCCESS,
  VIEW_PHONES_ERROR,

  VIEW_PHONE_BY_ID_ERROR,
  VIEW_PHONE_BY_ID_START,
  VIEW_PHONE_BY_ID_SUCCESS,

  ADD_PHONE_TO_BASKET,

  SEARCH_PHONE,

  VIEW_CATEGORIES_ERROR,
  VIEW_CATEGORIES_START,
  VIEW_CATEGORIES_SUCCESS,

  REMOVE_PHONE_FROM_BASKET,

  CLEAN_BASKET,
} from 'actionTypes'

import {
  getPhones as getPhonesFromApi,
  getPhoneById as getPhoneWithIdFromApi,
  getCategories as getCategoriesFromApi
} from 'api'

  export const viewPhones = () => async dispatch => {
  dispatch({type: VIEW_PHONES_START})
  try {
    const phones = await getPhonesFromApi()
    dispatch({
      type: VIEW_PHONES_SUCCESS,
      payload: phones
    })
  } catch (err) {
    dispatch({
      type: VIEW_PHONES_ERROR,
      payload: err,
      error: true
    })
  }
}

export const viewPhoneWithId = (id) => async dispatch => {
  dispatch({type: VIEW_PHONE_BY_ID_START})
  try {
    const phone = await getPhoneWithIdFromApi(id)
    dispatch({
      type: VIEW_PHONE_BY_ID_SUCCESS,
      payload: phone
    })
  } catch (err) {
    dispatch({
      type: VIEW_PHONE_BY_ID_ERROR,
      payload: err,
      error: true
    })
  }
}

export const searchPhone = text => dispatch => {
  dispatch({
    type: SEARCH_PHONE,
    payload: text
  })
}

export const addPhoneToBasket = id => dispatch => {
  dispatch({
    type: ADD_PHONE_TO_BASKET,
    payload: id
  })
}

export const viewCategories = () => async dispatch => {
  dispatch({type: VIEW_CATEGORIES_START})

  try {
    const categories = await getCategoriesFromApi()
    dispatch({
      type: VIEW_CATEGORIES_SUCCESS,
      payload: categories
    })
  } catch (err) {
    dispatch({
      type: VIEW_CATEGORIES_ERROR,
      payload: err,
      error: true
    })
  }
}

export const deletePhoneFromBasket = id => async dispatch => {
  dispatch({
    type: REMOVE_PHONE_FROM_BASKET,
    payload: id
  })
}

export const cleanBasket = () => async dispatch => {
  dispatch({
    type: CLEAN_BASKET
  })
}

export const jsonShowing = phones => () => {
  alert(JSON.stringify(phones))
}



